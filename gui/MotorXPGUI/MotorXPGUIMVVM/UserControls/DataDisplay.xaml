<UserControl x:Class="MotorXPGUIMVVM.UserControls.DataDisplay"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:gauge="clr-namespace:MotorXPGUIMVVM.Controls.Gauge"
             xmlns:lineChart="clr-namespace:MotorXPGUIMVVM.Controls.LineChart"
             mc:Ignorable="d" 
             Name="UcContainer"
             d:DesignHeight="500" d:DesignWidth="400" 
             DataContext="{Binding DataDisplayViewModel, Source={StaticResource Locator}}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Controls/Gauge/GaugeResources.xaml"/>
                <ResourceDictionary Source="../Controls/LineChart/LineChartResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <ItemsControl Width="{Binding ElementName=UcContainer, Path=Width}" ItemsSource="{Binding Repository.SensorDataCollections}">
        <ItemsControl.ItemTemplate>
            <DataTemplate>
                <Grid>
                    <Expander  Header="{Binding Unit}" IsExpanded="True">
                        <DockPanel Visibility="{Binding ExpanderCollapsed}">
                            <Grid  DockPanel.Dock="Left">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="80"/>
                                    <RowDefinition Height="22"/>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="120"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                            <!--Gauge Column-->
                                <gauge:Gauge Grid.Row="0" Grid.Column="0" Width="100" Height="80" VerticalAlignment="Top" MaxAngle="1.6" 
                                             MinValue="{Binding MinValue}" MaxValue="{Binding MaxValue}" MinAngle="-1.6" NeedleColor="Red"
                                             GaugeBorderBrush="Transparent" NeedleBorderBrush="Transparent" Value="{Binding TargetValue}"
                                             Margin="0 0 0 -10" StrokeColor="Transparent" x:Name="Gauge2" MinMaxValueIndicatorBrush="Transparent"
                                             Foreground="Transparent" GaugeFill="Transparent"/>
                                <gauge:Gauge Grid.Column="0" Grid.Row="0" Width="100" Height="80" VerticalAlignment="Top" MaxAngle="1.6"  
                                             MaxValue="{Binding MaxValue}" MinAngle="-1.6" GaugeBorderBrush="Transparent" NeedleBorderBrush="Gray" 
                                             NeedleColor="White" Margin="0 0 0 -10" StrokeColor="PowderBlue" x:Name="Gauge" FontSize="10"
                                             MinMaxValueIndicatorBrush="Black" GaugeFill="Transparent" ValueIndicatorSize="20" Strokes="10"
                                             StrokeLength="0.6" StrokeThickness="3" Value="{Binding LastValue}" MinValue="{Binding MinValue}"/>
                                <!--Gauge slider-->
                                <Slider Grid.Column="0" Grid.Row="1" Name="SliderGauge"  TickPlacement="BottomRight" TickFrequency="{Binding GaugeTickFrequency}" Minimum="{Binding MinValue}" Width="{Binding ElementName=Gauge, Path=Width}" 
                                        Maximum="{Binding MaxValue}" Value="{Binding TargetValue, Mode=TwoWay}" IsSnapToTickEnabled="True"/>
                                <!--Gauge Text area-->
                                <StackPanel Grid.Column="0" Grid.Row="2" Orientation="Horizontal" >
                                    <Label FontSize="10" Content="Target Value:" VerticalContentAlignment="Top" VerticalAlignment="Top"></Label>
                                    <TextBox FontSize="12" Width="40" Height="26" Text="{Binding ElementName=SliderGauge, Path=Value, UpdateSourceTrigger=PropertyChanged , Mode=TwoWay}"></TextBox>
                                </StackPanel>

                            <!--LineChart Column-->
                                <lineChart:LineChart Grid.Column="1" Grid.Row="0" MinWidth="200" Values="{Binding Values}" AutoMinMax="False" Margin="5 0"  
                                                     SampleWindow="10" IsShowingAll="{Binding ShowAll, Mode=TwoWay}" x:Name="LineChart" Background="White" 
                                                     StrokeColor="LightPink" FillColor="MintCream" FontSize="10" AxisColor="DarkGray"/>
                                
                               <!--LineChart slider-->
                                <Slider Name="SliderLineChart"  Grid.Column="1" Grid.Row="1"  Minimum="0" Margin="{Binding ElementName=LineChart, Path=Margin}" Maximum="{Binding LastSample}" 
                                        Width="{Binding ElementName=LineChart, Path=Width}" Value="{Binding CurrentSample}" 
                                        ToolTip="{Binding CurrentValue}" DockPanel.Dock="Bottom"/>

                                <DockPanel Grid.Column="1" Grid.Row="2" >
                                    <Label Content="{Binding CurrentValueText}" FontSize="12" DockPanel.Dock="Left"></Label>
                                    <CheckBox DockPanel.Dock="Right" HorizontalAlignment="Right" Content="Show All" Command="{Binding ShowAllCommand}" IsChecked="{Binding ShowAll}"/>
                                </DockPanel>
                            </Grid>
                        </DockPanel>
                    </Expander>
                </Grid>
            </DataTemplate>
        </ItemsControl.ItemTemplate>
        <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
                <UniformGrid Columns="1"/>
            </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
    </ItemsControl>
</UserControl>
