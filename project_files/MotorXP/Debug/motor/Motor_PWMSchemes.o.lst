   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "Motor_PWMSchemes.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_GPIO_SetOutputHigh:
  25              	.LFB130:
  26              	 .file 1 "E:/DT/workspace/MotorXP/Libraries/XMCLib/inc/xmc_gpio.h"
   1:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****   *************************************************************************************************
   7:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** {
  27              	 .loc 1 257 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 258:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  45              	 .loc 1 260 0
  46 000c FB78     	 ldrb r3,[r7,#3]
  47 000e 0122     	 movs r2,#1
  48 0010 9A40     	 lsls r2,r2,r3
  49 0012 7B68     	 ldr r3,[r7,#4]
  50 0014 5A60     	 str r2,[r3,#4]
 261:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** }
  51              	 .loc 1 261 0
  52 0016 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0018 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001a 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 001e 7047     	 bx lr
  64              	 .cfi_endproc
  65              	.LFE130:
  67              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  68              	 .align 2
  69              	 .thumb
  70              	 .thumb_func
  72              	XMC_GPIO_SetOutputLow:
  73              	.LFB131:
 262:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** {
  74              	 .loc 1 283 0
  75              	 .cfi_startproc
  76              	 
  77              	 
  78              	 
  79 0000 80B4     	 push {r7}
  80              	.LCFI6:
  81              	 .cfi_def_cfa_offset 4
  82              	 .cfi_offset 7,-4
  83 0002 83B0     	 sub sp,sp,#12
  84              	.LCFI7:
  85              	 .cfi_def_cfa_offset 16
  86 0004 00AF     	 add r7,sp,#0
  87              	.LCFI8:
  88              	 .cfi_def_cfa_register 7
  89 0006 7860     	 str r0,[r7,#4]
  90 0008 0B46     	 mov r3,r1
  91 000a FB70     	 strb r3,[r7,#3]
 284:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  92              	 .loc 1 286 0
  93 000c FB78     	 ldrb r3,[r7,#3]
  94 000e 4FF48032 	 mov r2,#65536
  95 0012 9A40     	 lsls r2,r2,r3
  96 0014 7B68     	 ldr r3,[r7,#4]
  97 0016 5A60     	 str r2,[r3,#4]
 287:E:/DT/workspace/MotorXP/Libraries/XMCLib/inc\xmc_gpio.h **** }
  98              	 .loc 1 287 0
  99 0018 0C37     	 adds r7,r7,#12
 100              	.LCFI9:
 101              	 .cfi_def_cfa_offset 4
 102 001a BD46     	 mov sp,r7
 103              	.LCFI10:
 104              	 .cfi_def_cfa_register 13
 105              	 
 106 001c 5DF8047B 	 ldr r7,[sp],#4
 107              	.LCFI11:
 108              	 .cfi_restore 7
 109              	 .cfi_def_cfa_offset 0
 110 0020 7047     	 bx lr
 111              	 .cfi_endproc
 112              	.LFE131:
 114 0022 00BF     	 .section .text.Motor_Scheme_Default,"ax",%progbits
 115              	 .align 2
 116              	 .global Motor_Scheme_Default
 117              	 .thumb
 118              	 .thumb_func
 120              	Motor_Scheme_Default:
 121              	.LFB138:
 122              	 .file 2 "../motor/Motor_PWMSchemes.c"
   1:../motor/Motor_PWMSchemes.c **** /*
   2:../motor/Motor_PWMSchemes.c ****  * Motor_PWMSchemes.c
   3:../motor/Motor_PWMSchemes.c ****  *
   4:../motor/Motor_PWMSchemes.c ****  *  Created on: Jan 4, 2017
   5:../motor/Motor_PWMSchemes.c ****  *      Author: MotorXP
   6:../motor/Motor_PWMSchemes.c ****  */
   7:../motor/Motor_PWMSchemes.c **** 
   8:../motor/Motor_PWMSchemes.c **** #include "Motor_PWMSchemes.h"
   9:../motor/Motor_PWMSchemes.c **** #include "Motor.h"
  10:../motor/Motor_PWMSchemes.c **** 
  11:../motor/Motor_PWMSchemes.c **** /*
  12:../motor/Motor_PWMSchemes.c ****  * @brief H ON L PWM Scheme with only High instead of PWM
  13:../motor/Motor_PWMSchemes.c ****  */
  14:../motor/Motor_PWMSchemes.c **** 
  15:../motor/Motor_PWMSchemes.c **** void Motor_Scheme_Default(uint8_t* currentPattern, uint8_t position) {
 123              	 .loc 2 15 0
 124              	 .cfi_startproc
 125              	 
 126              	 
 127 0000 80B5     	 push {r7,lr}
 128              	.LCFI12:
 129              	 .cfi_def_cfa_offset 8
 130              	 .cfi_offset 7,-8
 131              	 .cfi_offset 14,-4
 132 0002 82B0     	 sub sp,sp,#8
 133              	.LCFI13:
 134              	 .cfi_def_cfa_offset 16
 135 0004 00AF     	 add r7,sp,#0
 136              	.LCFI14:
 137              	 .cfi_def_cfa_register 7
 138 0006 7860     	 str r0,[r7,#4]
 139 0008 0B46     	 mov r3,r1
 140 000a FB70     	 strb r3,[r7,#3]
  16:../motor/Motor_PWMSchemes.c **** 	if (position == currentPattern[0]) {
 141              	 .loc 2 16 0
 142 000c 7B68     	 ldr r3,[r7,#4]
 143 000e 1B78     	 ldrb r3,[r3]
 144 0010 FA78     	 ldrb r2,[r7,#3]
 145 0012 9A42     	 cmp r2,r3
 146 0014 0AD1     	 bne .L4
 147              	.LBB2:
  17:../motor/Motor_PWMSchemes.c **** 		Motor_ClearOutputs();
 148              	 .loc 2 17 0
 149 0016 FFF7FEFF 	 bl Motor_ClearOutputs
  18:../motor/Motor_PWMSchemes.c **** 		XMC_GPIO_SetOutputHigh(MOTOR_AH);
 150              	 .loc 2 18 0
 151 001a 3048     	 ldr r0,.L10
 152 001c 0521     	 movs r1,#5
 153 001e FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
  19:../motor/Motor_PWMSchemes.c **** 		XMC_GPIO_SetOutputHigh(MOTOR_BL);
 154              	 .loc 2 19 0
 155 0022 2E48     	 ldr r0,.L10
 156 0024 0121     	 movs r1,#1
 157 0026 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 158              	.LBE2:
 159 002a 53E0     	 b .L3
 160              	.L4:
  20:../motor/Motor_PWMSchemes.c **** 	} else if (position == currentPattern[1]) {
 161              	 .loc 2 20 0
 162 002c 7B68     	 ldr r3,[r7,#4]
 163 002e 0133     	 adds r3,r3,#1
 164 0030 1B78     	 ldrb r3,[r3]
 165 0032 FA78     	 ldrb r2,[r7,#3]
 166 0034 9A42     	 cmp r2,r3
 167 0036 0AD1     	 bne .L6
 168              	.LBB3:
  21:../motor/Motor_PWMSchemes.c **** 		Motor_ClearOutputs();
 169              	 .loc 2 21 0
 170 0038 FFF7FEFF 	 bl Motor_ClearOutputs
  22:../motor/Motor_PWMSchemes.c **** 		XMC_GPIO_SetOutputLow(MOTOR_AH);
 171              	 .loc 2 22 0
 172 003c 2748     	 ldr r0,.L10
 173 003e 0521     	 movs r1,#5
 174 0040 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
  23:../motor/Motor_PWMSchemes.c **** 		XMC_GPIO_SetOutputHigh(MOTOR_CH);
 175              	 .loc 2 23 0
 176 0044 2548     	 ldr r0,.L10
 177 0046 0321     	 movs r1,#3
 178 0048 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 179              	.LBE3:
 180 004c 42E0     	 b .L3
 181              	.L6:
  24:../motor/Motor_PWMSchemes.c **** 	} else if (position == currentPattern[2]) {
 182              	 .loc 2 24 0
 183 004e 7B68     	 ldr r3,[r7,#4]
 184 0050 0233     	 adds r3,r3,#2
 185 0052 1B78     	 ldrb r3,[r3]
 186 0054 FA78     	 ldrb r2,[r7,#3]
 187 0056 9A42     	 cmp r2,r3
 188 0058 0AD1     	 bne .L7
 189              	.LBB4:
  25:../motor/Motor_PWMSchemes.c **** 		Motor_ClearOutputs();
 190              	 .loc 2 25 0
 191 005a FFF7FEFF 	 bl Motor_ClearOutputs
  26:../motor/Motor_PWMSchemes.c **** 		XMC_GPIO_SetOutputLow(MOTOR_BL);
 192              	 .loc 2 26 0
 193 005e 1F48     	 ldr r0,.L10
 194 0060 0121     	 movs r1,#1
 195 0062 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
  27:../motor/Motor_PWMSchemes.c **** 		XMC_GPIO_SetOutputHigh(MOTOR_AL);
 196              	 .loc 2 27 0
 197 0066 1D48     	 ldr r0,.L10
 198 0068 0221     	 movs r1,#2
 199 006a FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 200              	.LBE4:
 201 006e 31E0     	 b .L3
 202              	.L7:
  28:../motor/Motor_PWMSchemes.c **** 	} else if (position == currentPattern[3]) {
 203              	 .loc 2 28 0
 204 0070 7B68     	 ldr r3,[r7,#4]
 205 0072 0333     	 adds r3,r3,#3
 206 0074 1B78     	 ldrb r3,[r3]
 207 0076 FA78     	 ldrb r2,[r7,#3]
 208 0078 9A42     	 cmp r2,r3
 209 007a 0AD1     	 bne .L8
 210              	.LBB5:
  29:../motor/Motor_PWMSchemes.c **** 		Motor_ClearOutputs();
 211              	 .loc 2 29 0
 212 007c FFF7FEFF 	 bl Motor_ClearOutputs
  30:../motor/Motor_PWMSchemes.c **** 		XMC_GPIO_SetOutputLow(MOTOR_CH);
 213              	 .loc 2 30 0
 214 0080 1648     	 ldr r0,.L10
 215 0082 0321     	 movs r1,#3
 216 0084 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
  31:../motor/Motor_PWMSchemes.c **** 		XMC_GPIO_SetOutputHigh(MOTOR_BH);
 217              	 .loc 2 31 0
 218 0088 1448     	 ldr r0,.L10
 219 008a 0421     	 movs r1,#4
 220 008c FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 221              	.LBE5:
 222 0090 20E0     	 b .L3
 223              	.L8:
  32:../motor/Motor_PWMSchemes.c **** 	} else if (position == currentPattern[4]) {
 224              	 .loc 2 32 0
 225 0092 7B68     	 ldr r3,[r7,#4]
 226 0094 0433     	 adds r3,r3,#4
 227 0096 1B78     	 ldrb r3,[r3]
 228 0098 FA78     	 ldrb r2,[r7,#3]
 229 009a 9A42     	 cmp r2,r3
 230 009c 0AD1     	 bne .L9
 231              	.LBB6:
  33:../motor/Motor_PWMSchemes.c **** 		Motor_ClearOutputs();
 232              	 .loc 2 33 0
 233 009e FFF7FEFF 	 bl Motor_ClearOutputs
  34:../motor/Motor_PWMSchemes.c **** 		XMC_GPIO_SetOutputLow(MOTOR_AL);
 234              	 .loc 2 34 0
 235 00a2 0E48     	 ldr r0,.L10
 236 00a4 0221     	 movs r1,#2
 237 00a6 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
  35:../motor/Motor_PWMSchemes.c **** 		XMC_GPIO_SetOutputHigh(MOTOR_CL);
 238              	 .loc 2 35 0
 239 00aa 0C48     	 ldr r0,.L10
 240 00ac 0021     	 movs r1,#0
 241 00ae FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 242              	.LBE6:
 243 00b2 0FE0     	 b .L3
 244              	.L9:
  36:../motor/Motor_PWMSchemes.c **** 	} else if (position == currentPattern[5]) {
 245              	 .loc 2 36 0
 246 00b4 7B68     	 ldr r3,[r7,#4]
 247 00b6 0533     	 adds r3,r3,#5
 248 00b8 1B78     	 ldrb r3,[r3]
 249 00ba FA78     	 ldrb r2,[r7,#3]
 250 00bc 9A42     	 cmp r2,r3
 251 00be 09D1     	 bne .L3
 252              	.LBB7:
  37:../motor/Motor_PWMSchemes.c **** 		Motor_ClearOutputs();
 253              	 .loc 2 37 0
 254 00c0 FFF7FEFF 	 bl Motor_ClearOutputs
  38:../motor/Motor_PWMSchemes.c **** 		XMC_GPIO_SetOutputLow(MOTOR_BH);
 255              	 .loc 2 38 0
 256 00c4 0548     	 ldr r0,.L10
 257 00c6 0421     	 movs r1,#4
 258 00c8 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
  39:../motor/Motor_PWMSchemes.c **** 		XMC_GPIO_SetOutputHigh(MOTOR_AH);
 259              	 .loc 2 39 0
 260 00cc 0348     	 ldr r0,.L10
 261 00ce 0521     	 movs r1,#5
 262 00d0 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 263              	.L3:
 264              	.LBE7:
  40:../motor/Motor_PWMSchemes.c **** 	} else {
  41:../motor/Motor_PWMSchemes.c **** 		//TODO error handling
  42:../motor/Motor_PWMSchemes.c **** 	}
  43:../motor/Motor_PWMSchemes.c **** }
 265              	 .loc 2 43 0
 266 00d4 0837     	 adds r7,r7,#8
 267              	.LCFI15:
 268              	 .cfi_def_cfa_offset 8
 269 00d6 BD46     	 mov sp,r7
 270              	.LCFI16:
 271              	 .cfi_def_cfa_register 13
 272              	 
 273 00d8 80BD     	 pop {r7,pc}
 274              	.L11:
 275 00da 00BF     	 .align 2
 276              	.L10:
 277 00dc 00800248 	 .word 1208123392
 278              	 .cfi_endproc
 279              	.LFE138:
 281              	 .text
 282              	.Letext0:
 283              	 .file 3 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 284              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 285              	 .file 5 "E:/DT/workspace/MotorXP/Libraries/XMCLib/inc/xmc4_gpio.h"
 286              	 .file 6 "E:/DT/workspace/MotorXP/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Motor_PWMSchemes.c
    {standard input}:20     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:24     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:68     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:72     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:115    .text.Motor_Scheme_Default:00000000 $t
    {standard input}:120    .text.Motor_Scheme_Default:00000000 Motor_Scheme_Default
    {standard input}:277    .text.Motor_Scheme_Default:000000dc $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
Motor_ClearOutputs
