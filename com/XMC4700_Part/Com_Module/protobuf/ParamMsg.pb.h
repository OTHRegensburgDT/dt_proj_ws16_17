/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Sat Nov 19 14:36:57 2016. */

#ifndef PB_PARAMMSG_PB_H_INCLUDED
#define PB_PARAMMSG_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Com_Module_RegParams {
    bool has_paraP;
    double paraP;
    bool has_paraI;
    double paraI;
    bool has_paraD;
    double paraD;
    bool has_paraVelo;
    double paraVelo;
    bool has_paraAng;
    double paraAng;
/* @@protoc_insertion_point(struct:Com_Module_RegParams) */
} Com_Module_RegParams;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Com_Module_RegParams_init_default        {false, 0, false, 0, false, 0, false, 0, false, 0}
#define Com_Module_RegParams_init_zero           {false, 0, false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Com_Module_RegParams_paraP_tag           1
#define Com_Module_RegParams_paraI_tag           2
#define Com_Module_RegParams_paraD_tag           3
#define Com_Module_RegParams_paraVelo_tag        4
#define Com_Module_RegParams_paraAng_tag         5

/* Struct field encoding specification for nanopb */
extern const pb_field_t Com_Module_RegParams_fields[6];

/* Maximum encoded size of messages (where known) */
#define Com_Module_RegParams_size                45

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define PARAMMSG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
